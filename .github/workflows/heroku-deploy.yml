name: Deploy to Heroku
on:
  push:
    branches:
      - heroku-deployment
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Heroku CLI
        run: |
          curl https://cli-assets.heroku.com/install.sh | sh
          
      - name: Login to Heroku
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: |
          heroku container:login
          
      - name: Set Heroku stack to container
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: |
          heroku stack:set container --app ${{ secrets.HEROKU_APP_NAME }}
      
      - name: Configure Heroku environment variables
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: |
          # Set performance optimization configuration
          heroku config:set PERFORMANCE_MODE=high --app ${{ secrets.HEROKU_APP_NAME }}
          heroku config:set MEMORY_LIMIT_MB=500 --app ${{ secrets.HEROKU_APP_NAME }}
          heroku config:set QUERY_CACHE_SIZE=2000 --app ${{ secrets.HEROKU_APP_NAME }}
          heroku config:set QUERY_CACHE_TTL=600 --app ${{ secrets.HEROKU_APP_NAME }}
          
      - name: Build and Push to Heroku
        uses: akhileshns/heroku-deploy@v3.12.14
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: ${{ secrets.HEROKU_APP_NAME }}
          heroku_email: ${{ secrets.HEROKU_EMAIL }}
          usedocker: true
          justlogin: true
          
      - name: Push web and worker to Heroku
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: |
          # Push and release web dyno
          heroku container:push web --app ${{ secrets.HEROKU_APP_NAME }}
          heroku container:release web --app ${{ secrets.HEROKU_APP_NAME }}
          
          # Push and release worker dyno
          heroku container:push worker --app ${{ secrets.HEROKU_APP_NAME }}
          heroku container:release worker --app ${{ secrets.HEROKU_APP_NAME }}
          
      - name: Ensure correct scaling
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: |
          heroku ps:scale web=1 worker=1 --app ${{ secrets.HEROKU_APP_NAME }}
          
      - name: Wait for deployment
        run: |
          echo "Waiting for deployment to complete..."
          sleep 45
      
      - name: Verify optimizations
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: |
          echo "Checking if optimizations are running correctly..."
          heroku run python heroku_scripts/check_optimizations.py --app ${{ secrets.HEROKU_APP_NAME }}
          
      - name: Health check
        run: |
          curl -f https://${{ secrets.HEROKU_APP_NAME }}.herokuapp.com/health || echo "Health check failed - check logs with 'heroku logs --tail'"
          
      - name: Status check
        run: |
          # Verify web status endpoint is responding
          sleep 15
          curl -f https://${{ secrets.HEROKU_APP_NAME }}.herokuapp.com/status || echo "Status endpoint not available - check logs"
          
      - name: Deployment summary
        run: |
          echo "‚úÖ Deployment completed"
          echo "üìä Status: https://${{ secrets.HEROKU_APP_NAME }}.herokuapp.com/status"
          echo "üîç Logs: Run 'heroku logs --tail --app ${{ secrets.HEROKU_APP_NAME }}'"
