name: Python CI
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    strategy:
      matrix:
        python-version: [3.12]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install UV
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        echo "$HOME/.cargo/bin" >> $GITHUB_PATH

    - name: Install dependencies with UV
      run: |
        uv pip install --system pytest pytest-asyncio pytest-cov
        uv pip install -e . --system

    - name: Run tests
      run: |
        pytest tests/unit/ --cov=./ --cov-report=xml -v

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v5
      with:
        files: ./coverage.xml
        fail_ci_if_error: false

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install UV
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        echo "$HOME/.cargo/bin" >> $GITHUB_PATH

    - name: Install lint tools with UV
      run: |
        uv pip install --system ruff black isort

    - name: Install project with UV
      run: |
        uv pip install -e . --system

    - name: Lint with ruff
      run: |
        ruff check . --fix --ignore=ANN201,ANN001,ANN204,ANN202 --exclude tests/

    - name: Check formatting with black
      run: |
        black --check .

    - name: Check import sorting with isort
      run: |
        isort --check --profile black .

  dependency-review:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: 'Checkout Repository'
        uses: actions/checkout@v4

      - name: 'Dependency Review'
        uses: actions/dependency-review-action@v4
        with:
          fail-on-severity: critical
          deny-licenses: GPL-3.0
          # Skip dependency diff since we're only using UV and pyproject.toml
          vulnerability-check: true
