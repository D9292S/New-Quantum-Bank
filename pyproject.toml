[project]
name = "quantum-bank-bot"
version = "1.0.0"
description = "A Discord economy bot with advanced banking features, MongoDB integration, and colorful logging"
readme = "README.md"
requires-python = ">=3.9"
license = {file = "LICENSE"}
authors = [
    {name = "Quantum Bank Team"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Framework :: AsyncIO",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Communications :: Chat",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

dependencies = [
    "py-cord>=2.0.0",
    "motor>=3.0.0",
    "pymongo>=4.0.0",
    "python-dotenv>=0.19.0",
    "python-dateutil>=2.8.2",
    "asyncio>=3.4.3",
    "colorama>=0.4.4",
    "orjson>=3.6.0",
    "dnspython>=2.1.0",
    "aiohttp>=3.8.0",
    "cryptography>=36.0.0",
    "PyNaCl>=1.5.0",
    "typing-extensions>=4.0.0",
    "pytz>=2021.3",
]

[project.optional-dependencies]
high-performance = [
    'uvloop>=0.16.0; platform_system != "Windows"',
]

development = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.20.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "ruff>=0.0.280",
    "bandit>=1.7.5",
    "pre-commit>=3.3.0",
    "mypy>=1.0.0",
    "mongomock>=4.1.2",
    "motor-stubs>=1.7.1",
]

testing = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.20.0",
    "pytest-cov>=4.0.0",
    "mongomock>=4.1.2",
]

docs = [
    "sphinx>=6.0.0",
    "sphinx-rtd-theme>=1.2.0",
    "myst-parser>=1.0.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["."]

[tool.ruff]
# Enable pycodestyle ('E'), Pyflakes ('F'), and import sorting ('I')
select = ["E", "F", "I"]
ignore = []
line-length = 100

# Allow autofix for all enabled rules (when `--fix`) is provided
fixable = ["E", "F", "I"]
unfixable = []

# Exclude a variety of commonly ignored directories
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]
per-file-ignores = {}

# Allow unused variables when underscore-prefixed
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Assume Python 3.9.
target-version = "py39"

[tool.ruff.isort]
known-third-party = ["py_cord", "motor", "pymongo", "dotenv", "dateutil", "colorama", "orjson"]

[tool.black]
line-length = 100
target-version = ["py39"]
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

[[tool.mypy.overrides]]
module = ["py_cord.*", "motor.*", "pymongo.*"]
ignore_missing_imports = true

# Additional override for mongomock since we're removing types-pymongo dependency
[[tool.mypy.overrides]]
module = ["mongomock.*"]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
asyncio_mode = "auto"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests that require external services",
    "unit: marks unit tests",
    "bot: marks tests that require a bot instance",
    "database: marks tests that require a database connection",
]

[tool.bandit]
exclude_dirs = ["tests", ".venv", "venv"]
skips = ["B311"]  # Skip warning about random, we're using it for non-security purposes
